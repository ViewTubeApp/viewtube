# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  traefik:
    image: traefik:v3.1
    command:
      - "--log.level=DEBUG"
      - "--providers.docker"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.email=elliott@zenful.site"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      # - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 8080
        target: 8080
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    image: ghcr.io/viewtubeapp/web:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.routers.web.rule=Host(`localhost`) || Host(`62.72.22.222`)"
      # - "traefik.http.routers.web.entrypoints=websecure"
      # - "traefik.http.routers.web.tls.certresolver=myresolver"
    secrets:
      - db-password
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_DB=viewtube
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    depends_on:
      - db
    volumes:
      - uploads:/app/public/uploads
    deploy:
      update_config:
        order: start-first

  db:
    image: postgres
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=viewtube
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  uploads:
  letsencrypt:

secrets:
  db-password:
    external: true
