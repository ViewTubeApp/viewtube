# Build stage
FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache gcc musl-dev

# Download dependencies
COPY extra/hermes/go.mod extra/hermes/go.sum ./
RUN go mod download

# Copy source code
COPY extra/hermes/ .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /hermes

# Final stage
FROM alpine:latest

WORKDIR /app

# Install ffmpeg
RUN apk add --no-cache ffmpeg

# Copy binary from builder
COPY --from=builder /hermes .

ARG POSTGRES_HOST
ARG POSTGRES_PORT
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD_FILE
ARG REDIS_HOST
ARG REDIS_PORT
ARG UPLOADS_VOLUME

ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_DB=$POSTGRES_DB
ENV POSTGRES_PORT=$POSTGRES_PORT
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_PASSWORD_FILE=$POSTGRES_PASSWORD_FILE
ENV REDIS_HOST=$REDIS_HOST
ENV REDIS_PORT=$REDIS_PORT
ENV UPLOADS_VOLUME=$UPLOADS_VOLUME

# Run the binary
CMD ["./hermes"] 