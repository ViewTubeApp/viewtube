# Build stage
FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache gcc musl-dev

# Download dependencies
COPY extra/hermes/go.mod extra/hermes/go.sum ./
RUN go mod download

# Copy source code
COPY extra/hermes/ .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /hermes

# Final stage
FROM alpine:latest

WORKDIR /app

# Install ffmpeg
RUN apk add --no-cache ffmpeg

# Copy binary from builder
COPY --from=builder /hermes .

ARG POSTGRES_HOST \
    POSTGRES_DB \
    POSTGRES_PORT \
    POSTGRES_USER \
    POSTGRES_PASSWORD_FILE \
    RABBITMQ_HOST \
    RABBITMQ_PORT \
    RABBITMQ_USER \
    RABBITMQ_PASSWORD \
    UPLOADS_VOLUME

ENV POSTGRES_HOST=${POSTGRES_HOST} \
    POSTGRES_DB=${POSTGRES_DB} \
    POSTGRES_PORT=${POSTGRES_PORT} \
    POSTGRES_USER=${POSTGRES_USER} \
    POSTGRES_PASSWORD_FILE=${POSTGRES_PASSWORD_FILE} \
    RABBITMQ_HOST=${RABBITMQ_HOST} \
    RABBITMQ_PORT=${RABBITMQ_PORT} \
    RABBITMQ_USER=${RABBITMQ_USER} \
    RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD} \
    UPLOADS_VOLUME=${UPLOADS_VOLUME}

# Run the binary
CMD ["./hermes"] 