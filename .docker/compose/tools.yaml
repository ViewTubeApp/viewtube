version: "3.8"

services:
  portainer:
    image: portainer/portainer-ce:2.24.1-alpine
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${REMOTE_HOST?:REMOTE_HOST is required}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      restart_policy:
        condition: any
        delay: 5s

  pgadmin:
    image: dpage/pgadmin4:9.0
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:?PGADMIN_EMAIL is required}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:?PGADMIN_PASSWORD is required}
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${REMOTE_HOST?:REMOTE_HOST is required}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.secure-headers-pgadmin.headers.customRequestHeaders.X-Script-Name=/pgadmin"
      - "traefik.http.middlewares.secure-headers-pgadmin.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure-headers-pgadmin.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.secure-headers-pgadmin.headers.stsPreload=true"
      - "traefik.http.middlewares.secure-headers-pgadmin.headers.stsIncludeSubdomains=true"
      - "traefik.http.routers.pgadmin.middlewares=secure-headers-pgadmin"
    depends_on:
      - db
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      restart_policy:
        condition: any
        delay: 5s
